{{- $redis := include "python-app.redis" . | fromYaml }}
{{- if $redis.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "python-app.fullname" . }}-redis
  labels:
    {{- include "python-app.labels" . | nindent 4 }}
    component: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "python-app.selectorLabels" . | nindent 6 }}
      component: redis
  template:
    metadata:
      labels:
        {{- include "python-app.selectorLabels" . | nindent 8 }}
        component: redis
    spec:
      containers:
        - name: redis
          image: "{{ $redis.image.repository }}:{{ $redis.image.tag }}"
          imagePullPolicy: {{ $redis.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          resources:
            {{- toYaml $redis.resources | nindent 12 }}
          {{- if $redis.persistence.enabled }}
          volumeMounts:
            - name: redis-data
              mountPath: /data
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
            periodSeconds: 5
      {{- if $redis.persistence.enabled }}
      volumes:
        - name: redis-data
          {{- if $redis.persistence.storageClass }}
          persistentVolumeClaim:
            claimName: {{ include "python-app.fullname" . }}-redis-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "python-app.fullname" . }}-redis
  labels:
    {{- include "python-app.labels" . | nindent 4 }}
    component: redis
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    {{- include "python-app.selectorLabels" . | nindent 4 }}
    component: redis
{{- if and $redis.enabled $redis.persistence.enabled $redis.persistence.storageClass }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "python-app.fullname" . }}-redis-pvc
  labels:
    {{- include "python-app.labels" . | nindent 4 }}
    component: redis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ $redis.persistence.storageClass }}
  resources:
    requests:
      storage: {{ $redis.persistence.size }}
{{- end }}
{{- end }} 